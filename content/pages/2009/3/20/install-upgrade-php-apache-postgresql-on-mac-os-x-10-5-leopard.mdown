date: 19 Mar 2009 18:00pm
categories: mac
read more: More&#8230;
summary: OS X&#8217;s default install of PHP and Apache does not come bundled with some key libraries like GD2 or PostgreSQL. This is the best way I have found to install or upgrade OS X with the latest versions of Apache, PHP, and PostgreSQL.

# Install / Upgrade PHP, Apache, PostgreSQL on Mac OS X 10.5 Leopard

## Overview

**MySQL Users:** The process below results in a PHP deployment with no MySQL support.  \[Religious, practical, and sensible reasons omitted.\]

I advise against attempts to install this software stack on Windows. I have done it, and it is wrought with strife and does not perform nearly as well. Always run software native. You&#8217;ll thank yourself later.

* **OS:** OS X 10.5.7
* **Web Server:** Apache 2.2.11
* **Language:** PHP 5.2.9
* **Database:** PostgreSQL 8.3.7

## Install PostgreSQL

Download the unified installer for [PostgreSQL for Mac](http://postgresqlformac.com).  Install the &#8220;Server&#8221; and &#8220;Client&#8221; version \[not &#8220;Development&#8221;\].  I prefer that installer over other installers or MacPorts because it places PostgreSQL in the correct OS-X-standard location, under `/Library`.  When complete, you should  be able to connect to a local instance of PostgreSQL using a query tool like [pgAdmin III](http://www.pgadmin.org).

Add PostgreSQL&#8217;s bin directory to your global PATH variable.  This will make all the PostgreSQL tools available without having to type their full paths.

<pre>:::shell-unix-generic
nano /etc/profile
</pre>

Append:

<pre>:::shell-unix-generic
export PATH=/Library/PostgreSQL8/bin:$PATH
</pre>

The change won&#8217;t take effect until you log out and back in.  If you are in as Root, you can simply type `exit`, then `su -` again.

Verify Path Var:

<pre>:::shell-unix-generic
echo $PATH
</pre>

You should see the Postgres path and all of your existing path vars appended to it.

## Install MacPorts

We will need MacPorts so we can install a few PHP dependencies easily:

[http://www.macports.org/install.php](http://www.macports.org/install.php)

If you already had MacPorts installed, be sure to upgrade your packages:

<pre>:::shell-unix-generic
/opt/local/bin/port selfupdate
</pre>

## Install PHP Dependencies

<pre>:::shell-unix-generic
sudo /opt/local/bin/port install wget +ssl freetype t1lib jpeg libpng xpm
</pre>

Go get a Vanilla Rooibos Latte. This may take 40 to 60 minutes.

## Recompile Apache

The default Apache install on OS 10.5 does not come with some necessary dependencies.  We&#8217;re going to recompile Apache from scratch with support for these things.  We are opting to compile rather than use the MacPort so we can have Apache in its native OS X location.

**Xcode must be installed** for these compiles to work.  It&#8217;s on the OS X installation DVD that came with your Mac.

Open Terminal and run the steps below, changing the Apache version number [2.2.11] to the latest.  See the Apache website if you aren&#8217;t sure which is the latest.  \[If wget doesn&#8217;t work, use curl -O.\]

<pre>:::shell-unix-generic
cd /tmp
wget http://apache.mirrors.timporter.net/httpd/httpd-2.2.11.tar.gz
tar -xvzf httpd-2.2.11.tar.gz
rm httpd-2.2.11.tar.gz
cd httpd-2.2.11
./configure --enable-layout=Darwin --enable-mods-shared=all
make all
sudo make install
sudo apachectl restart
cd ..
rm -r httpd-2.2.11
</pre>

## Recompile PHP

Let&#8217;s recompile PHP to the latest version with PostgreSQL and GD2 graphics support. Change PHP version number to latest in all lines below.

Important: When doing this a subsequent time [perhaps the first didn&#8217;t succeed or you are installing a new PHP release], I had to move the PHP executable and the Apache library out of the way first [ensuring that I deleted those backups when finished].  I was recompiling and phpinfo() still showed the old version.

<pre>:::shell-unix-generic
mv /usr/bin/php mv /usr/bin/php.bak
mv /usr/libexec/apache2/libphp5.so /usr/libexec/apache2/libphp5.bak
</pre>

Recompile:

<pre>:::shell-unix-generic
su -
cd /tmp
wget http://us2.php.net/distributions/php-5.2.9.tar.gz
tar -xvzf php-5.2.9.tar.gz
rm php-5.2.9.tar.gz
cd php-5.2.9
MACOSX_DEPLOYMENT_TARGET=10.5 CFLAGS="-arch ppc -arch ppc64 -arch i386 \
-arch x86_64 -g -Os -pipe -no-cpp-precomp" CCFLAGS="-arch ppc -arch ppc64 \
-arch i386 -arch x86_64 -g -Os -pipe" CXXFLAGS="-arch ppc -arch ppc64 -arch i386 \
-arch x86_64 -g -Os -pipe" LDFLAGS="-arch ppc -arch ppc64 -arch i386 -arch x86_64 \
-bind_at_load"
ln -s /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP /usr/lib/libldap.so
ln -s /opt/local/lib/libiconv.2.4.0.dylib /opt/local/lib/libiconv.so
./configure --enable-cli --enable-exif --enable-ftp --enable-mbregex --enable-mbstring \
--enable-pdo --enable-sockets --infodir=/usr/share/info --mandir=/usr/share/man \
--prefix=/usr --sysconfdir=/private/etc --with-apxs2=/usr/sbin/apxs \
--with-config-file-path=/etc --with-curl=/opt/local --with-freetype-dir=/opt/local \
--with-gd --with-iconv-dir=/opt/local --with-jpeg-dir=/opt/local --with-kerberos=/usr \
--with-ldap=/usr --with-mime-magic=/etc/apache2/magic \
--with-pdo-pgsql=/Library/PostgreSQL8 --with-pgsql=/Library/PostgreSQL8 \
--with-png-dir=/opt/local --with-t1lib=/opt/local --with-xmlrpc --with-xpm-dir=/opt/local \
--with-xsl=/usr --with-zlib-dir=/usr --without-iconv
make install
</pre>

The PHP executable is built as php.dSYM, I suppose so it doesn&#8217;t overwrite your old PHP.  Let&#8217;s back up the old one, and leave the new one there but symlink to it so future compiles will work correctly:

<pre>:::shell-unix-generic
if ( test -e /usr/bin/php && ! test -h /usr/bin/php) ; then mv /usr/bin/php /usr/bin/php.old; fi
ln -s /usr/bin/php.dSYM /usr/bin/php
</pre>

## Test

### Command Line

#### Verify PHP Version

<pre>:::shell-unix-generic
php --version
PHP 5.2.9 (cli) (built: Mar 19 2009 11:33:05)
</pre>

**If you see a warning**, &#8220;PHP Warning:  Module &#8216;gd&#8217; already loaded in Unknown on line 0&#8221;, edit php.ini:

<pre>:::shell-unix-generic
nano /private/etc/php.ini
</pre>

Comment out this line using a semi-colon:
	
<pre>:::shell-unix-generic
;extension=gd.so
</pre>

#### Time Zone

While you are in PHP.ini, find this section, uncomment it, and set your time zone:

<pre>:::shell-unix-generic
[Date]
; Defines the default timezone used by the date functions
date.timezone = "America/New_York"
</pre>

#### NSLinkModule() Error

On my MacBook at home I got this error:

<pre>:::shell-unix-generic
dyld: NSLinkModule() error
dyld: Library not loaded: /usr/X11/lib/libXpm.4.dylib
  Referenced from: /usr/lib/php/extensions/no-debug-non-zts-20060613/gd.so
  Reason: image not found
Trace/BPT trap
</pre>

Creating a symlink to the correct library fixed it:

<pre>:::shell-unix-generic
ln -s /opt/local/lib/libXpm.4.dylib /usr/X11/lib/libXpm.4.dylib
</pre>

#### Verify GD and PostgreSQL Support

<pre>:::shell-unix-generic
php -m | grep "gd\|pgsql"
gd
pdo_pgsql
pgsql
</pre>

### Apache

Place a test `phpinfo.php` file in the `/Library/WebServer/Documents` directory with the following contents:

<pre>:::shell-unix-generic
&lt;?php
phpinfo();
?&gt;
</pre>

Restart Apache:

<pre>:::shell-unix-generic
apachectl restart
</pre>

Browse [http://localhost/phpinfo.php](http://localhost/phpinfo.php).

Do a Find [Command-F] for the words &#8220;gd&#8221; and &#8220;pgsql&#8221; to ensure that the GD and PostgreSQL libraries are there.

## Cleanup

Remove the entire PHP source-code directory. Adjust path accordingly:

<pre>:::shell-unix-generic
rm -r /tmp/php-5.2.9
</pre>

Remove your backups if applicable:

<pre>:::shell-unix-generic
rm /usr/bin/php.bak
rm /usr/libexec/apache2/libphp5.bak
</pre>

## Create a Website

We need a way to host multiple websites on our local machine.  Create a home directory for our first site&#8217;s files and logs:

<pre>:::shell-unix-generic
mkdir /Library/WebServer/Documents/MySite/
mkdir /Library/WebServer/Documents/MySite/www
mkdir /Library/WebServer/Documents/MySite/logs
</pre>

Copy our test file to there.  We&#8217;ll need it later:

<pre>:::shell-unix-generic
cp /Library/WebServer/Documents/phpinfo.php /Library/WebServer/Documents/MySite/www
</pre>

Make it writable:

<pre>:::shell-unix-generic
sudo chmod -R 777 /Library/WebServer/Documents/MySite
</pre>

## Local DNS

Add this line to your `/etc/hosts` file:

<pre>:::shell-unix-generic
127.0.0.1       mysite.localhost
</pre>

You could make the hostname shorter, but I prefer it to look like a subdomain of localhost (because it is), and it always makes it clear to you and others, in the Address Bar for example, that we are browsing a local project.

## Virtual Host

### Ensure &#8220;Virtual Hosts&#8221; is Active

Edit:

<pre>:::shell-unix-generic
sudo nano /etc/apache2/httpd.conf
</pre>

Uncomment:

<pre>:::apache
Include /private/etc/apache2/extra/httpd-vhosts.conf
</pre>

### Allow .htaccess to Function

Drupal makes use of .htaccess for its URL rewriting component.  OS X comes with .htaccess support disabled.

Ctrl-W to find the second occurrence of &#8220;Override&#8221;.  Change its value to &#8220;All&#8221;.

<pre>:::apache
# AllowOverride controls what directives may be placed in .htaccess files.
# It can be &quot;All&quot;, &quot;None&quot;, or any combination of the keywords:
#   Options FileInfo AuthConfig Limit
#
AllowOverride All
</pre>

### Create a Virtual Host for Your Local Project

Edit:

<pre>:::shell-unix-generic
sudo nano /etc/apache2/extra/httpd-vhosts.conf
</pre>

Uncomment:
	
<pre>:::apache
NameVirtualHost *:80
</pre>

Append this text, changing the email address to yours:<

<pre>:::apache
&lt;VirtualHost *:80&gt;
    ServerName mysite.localhost
    ServerAdmin rbrooks@libraryvideo.com
    DocumentRoot /Library/WebServer/Documents/MySite/www
    CustomLog /Library/WebServer/Documents/MySite/logs/access_log common
    ErrorLog /Library/WebServer/Documents/MySite/logs/error_log
&lt;/VirtualHost&gt;
</pre>

## Test

Restart Apache

<pre>:::shell-unix-generic
apachectl restart
</pre>

Browse [http://mysite.localhost/phpinfo.php](http://mysite.localhost/phpinfo.php)

If you see the PHP Info page, we&#8217;re good!
